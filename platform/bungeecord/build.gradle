apply from: "../../GradleCommon/common.gradle"

import org.apache.tools.ant.filters.ReplaceTokens

evaluationDependsOn(":AuraBan-common")

configurations {
    slf4j {
        transitive = false
    }
}

sourceSets {
    main {
        java {
            srcDir project(":AuraBan-common").sourceSets.main.java.srcDirs
        }
        resources {
            srcDir project(":AuraBan-common").sourceSets.main.resources.srcDirs
        }
    }
}

repositories {
    maven {
        name "mikroskeem"
        url "https://repo.wut.ee/repository/mikroskeem-repo"
    }
}

dependencies {
    api project(":AuraBan-common")

    // Shadow dependencies
    shadow "eu.mikroskeem:picomaven:${project(":AuraBan-common").picoMaven_version}"

    // SLF4J files
    slf4j "org.slf4j:slf4j-api:${project(":AuraBan-common").slf4j_version}"
    slf4j "team.aura_dev.lib.slf4j-plugin.bungeecord:slf4j-plugin-bungeecord:${project(":AuraBan-common").slf4jPlugin_version}:${project(":AuraBan-common").slf4j_version}"
}

processSources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "slf4jVersion", project(":AuraBan-common").slf4j_version
    inputs.property "slf4jPluginVersion", project(":AuraBan-common").slf4jPlugin_version

    filter (ReplaceTokens, tokens: [
        "slf4jVersion": project(":AuraBan-common").slf4j_version,
        "slf4jPluginVersion": project(":AuraBan-common").slf4jPlugin_version
    ])
}

shadowJar {
    relocate("eu.mikroskeem", "${rootProject.group}.shadow.eu.mikroskeem")
    relocate("licenses", "${rootProject.group}.shadow.licenses")
    relocate("org.apache", "${rootProject.group}.shadow.org.apache")
    relocate("org.codehaus", "${rootProject.group}.shadow.org.codehaus")

    exclude "module-info.class"

    from(project.configurations.slf4j.files) {
        into "org/slf4j"
        rename '(.*).jar', '$1.zip'
    }
}
